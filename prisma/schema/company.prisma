model Company {
    id String @id @default(uuid())

    name             String
    slug             String  @unique
    shortDescription String?
    description      String? @db.Text
    published        Boolean @default(false)

    branchBusiness String?
    timezone       String?
    logo           String?
    favIcon        String?

    /// [CompanySettings]
    settings Json?
    /// [CompanyContact]
    contacts Json[]

    responsible      String
    responsibleEmail String?
    responsiblePhone String?

    docType               String
    identification        String
    companyName           String
    stateRegistration     String?
    municipalRegistration String?

    address String
    number  String
    country String
    state   String
    city    String

    userCompanyRelation UserCompanyRelation[]
    housingUnitTypes    HousingUnitType[]

    agePolicy          AgePolicy?
    cancellationPolicy CancellationPolicy?
    reservationConfig  ReservationConfig?
    facilities         CompanyFacility[]
    banners            Banner[]
    reservations       Reservation[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("companies")
}

model CompanyFacility {
    id String @id @default(uuid())

    companyId  String
    company    Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
    facilityId String
    facility   Facility @relation(fields: [facilityId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("company_facilities")
}
