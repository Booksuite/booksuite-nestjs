model Offer {
    id String @id @default(uuid())

    name        String
    description String?
    type        OfferType
    published   Boolean @default(false)

    visibilityStartDate DateTime @db.Date
    startDate           DateTime @db.Date
    endDate             DateTime @db.Date

    // Applicability Conditions
    minAdvanceDays    Int?
    maxAdvanceDays    Int?
    minStay           Int?
    maxStay           Int?
    validForAbandoned Boolean @default(false)
    validForPackages  Boolean @default(false)

    validServices OfferService[]
    validHousingUnitTypes OfferHousingUnitType[]
    validPaymentMethods   OfferPaymentMethod[]

    /// [WeekDays]
    validWeekDays Json // Array of week days (0-6)

    // Price Adjustment
    priceAdjustmentType  PriceVariationType
    priceAdjustmentValue Float              @db.DoublePrecision

    // Display Rules
    showInHighlights Boolean @default(false)
    showDiscountTag  Boolean @default(false)
    isExclusive      Boolean @default(false)
    couponCode       String?

    companyId String
    company   Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("offers")
}

model OfferHousingUnitType {
    id String @id @default(uuid())

    offerId String
    offer   Offer  @relation(fields: [offerId], references: [id], onDelete: Cascade)

    housingUnitTypeId String
    housingUnitType   HousingUnitType @relation(fields: [housingUnitTypeId], references: [id], onDelete: Cascade)

    @@unique([offerId, housingUnitTypeId], name: "offer_housing_unit_type_unique")
    @@map("offer_housing_unit_types")
}

model OfferPaymentMethod {
    id              String @id @default(uuid())
    offerId         String
    paymentMethodId String

    offer         Offer         @relation(fields: [offerId], references: [id], onDelete: Cascade)
    paymentMethod PaymentMethod @relation(fields: [paymentMethodId], references: [id], onDelete: Cascade)

    @@unique([offerId, paymentMethodId], name: "offer_payment_method_unique")
    @@map("offer_payment_methods")
}

model OfferService {
    id        String @id @default(uuid())
    offerId   String
    serviceId String

    offer   Offer   @relation(fields: [offerId], references: [id], onDelete: Cascade)
    service Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)

    @@unique([offerId, serviceId], name: "offer_service_unique")
    @@map("offer_services")
}

enum OfferType {
    SERVICE
    HOUSING_UNIT_TYPE
}
