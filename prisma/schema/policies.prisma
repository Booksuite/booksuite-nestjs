model CancellationPolicy {
    id String @id @default(uuid())

    applyCancellationTax Boolean?
    defaultValue         Int      @default(0)
    extraCancellationTax Boolean?
    withdrawalPeriod     Int
    dynamicDescription   String?
    otherDescription     String?
    flexModel            String?
    balancedModel        String?
    moderateModel        String?
    hardModel            String?

    companyId        String                    @unique
    company          Company                   @relation(fields: [companyId], references: [id], onDelete: Cascade)
    defaultPenaltyBy CancellationPolicyPenalty
    penaltyRanges    PenaltyRange[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("cancellation_policies")
}

model PenaltyRange {
    id String @id @default(uuid())

    daysBeforeCheckIn Int
    penaltyBy         CancellationPolicyPenalty
    value             Int                       @default(0)

    cancellationPolicyId String
    cancellationPolicy   CancellationPolicy @relation(fields: [cancellationPolicyId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("penalty_ranges")
}

model AgePolicy {
    id String @id @default(uuid())

    acceptChildren Boolean @default(false)
    adultMinAge    Int     @default(12)

    companyId String  @unique
    company   Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

    ageGroups AgeGroup[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("age_policies")
}

model AgeGroup {
    id String @id @default(uuid())

    initialAge Int
    finalAge   Int
    chargeType AgeGroupChargeType
    value      Int?

    tariffOption        TariffOptionAgeGroup[]
    ReservationAgeGroup ReservationAgeGroup[]

    agePolicyId String
    agePolicies AgePolicy @relation(fields: [agePolicyId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("age_groups")
}

enum AgeGroupChargeType {
    DAILY_PER_CHILDREN
    DAILY_PERCENTAGE_PER_CHILDREN
    FREE
}

enum CancellationPolicyPenalty {
    RESERVATION_PERCENTAGE
    FULL_DAILIES_PERCENTAGE
    FIRST_NIGHT_AMOUNT
}
