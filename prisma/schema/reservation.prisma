model Reservation {
    id String @id @default(uuid())

    status      String
    startDate   DateTime
    endDate     DateTime
    totalDays   Int?     @default(1)
    adults      Int
    children    Int
    saleChannel String
    notes       String   @db.Text

    housingUnitId String?
    housingUnit   HousingUnit? @relation(fields: [housingUnitId], references: [id], onDelete: SetNull)

    services ReservationService[]

    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    deletedAt DateTime?

    @@map("reservations")
}

model ReservationService {
    id         String @id @default(uuid())
    qtd        Int    @default(1)
    totalPrice Float  @default(0)

    serviceId     String
    service       Service     @relation(fields: [serviceId], references: [id], onDelete: Cascade)
    reservationId String
    reservation   Reservation @relation(fields: [reservationId], references: [id], onDelete: Cascade)

    @@map("reservation_services")
}

model ReservationConfig {
    id String @id @default(uuid())

    tax Float?

    reservationDepositType      ReservationDepositType
    reservationDepositTypeValue Float?

    reservationPolicy String @db.Text

    companyId String  @unique
    company   Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum ReservationDepositType {
    PERCENTAGE_ON_RESERVATION
    FULL_AMOUNT_ON_RESERVATION
    DAYLIES_FULL_AMOUNT_ON_RESERVATION
    FIRST_DAYLY_ON_RESERVATION
    NO_CHARGE
}
